{"version":3,"sources":["components/Header.js","container/HomePage.js","components/Board.js","components/Rack.js","components/AnalysisSidebar.js","components/Analysis.js","container/AnalysisPage.js","index.js"],"names":["Header","className","href","HomePage","Board","board","handleBoardChange","TW","DW","TL","DL","refs","useRef","useState","direction","setDirection","changeFocus","row","col","current","focus","onKeyDown","event","keyCode","moveTile","value","target","replace","onKeyUp","rows","i","rowID","cell","cellID","idx","parseInt","push","id","ref","element","type","maxLength","e","onChange","placeholder","indexOf","Rack","rack","handleRackChange","num","tileID","tileNum","AnalysisSidebar","map","j","Analysis","matrix","setBoard","setRack","copy","AnalysisPage","rootElement","document","getElementById","ReactDOM","render","exact","path","component"],"mappings":"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","file":"static/js/main.cd7f3310.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../App.css';\r\nconst Header = () => {\r\n    return <header className=\"header\">\r\n        <div className=\"nav-bar\">\r\n            <h1 className=\"site-title\"><a href=\"/\">Scrabble App</a></h1>\r\n            <nav>\r\n                <section>\r\n                    <a href=\"/AnalysisPage\">\r\n                        <span>\r\n                            Analysis\r\n                        </span></a>\r\n                </section>\r\n            </nav>\r\n        </div>\r\n        <div className=\"nav-bar\">\r\n            <a href=\"/Login\" className=\"navbar-button\">Sign In</a>\r\n        </div>\r\n    </header>\r\n}\r\nexport default Header;","import '../App.css';\nimport Header from '../components/Header'\n\nfunction HomePage() {\n  return (\n    <div className=\"body\">\n      <Header />\n      <h1>Home Page</h1>\n    </div>\n  );\n}\n\nexport default HomePage\n\n","/* eslint-disable no-loop-func */\r\n//create sidebar\r\n//figure out how to store words, DAWG\r\n//formulate the algorithm\r\nimport React, {useRef,useState} from 'react';\r\nimport '../App.css';\r\n\r\nconst Board = ({board,handleBoardChange}) => {\r\n  const TW = ['cell0-0', 'cell0-7', 'cell0-14', 'cell14-14', 'cell7-0', 'cell14-7', 'cell14-0', 'cell7-14'];\r\n  const DW = ['cell1-1', 'cell2-2', 'cell3-3', 'cell4-4', 'cell1-13', 'cell2-12', 'cell3-11', 'cell4-10', 'cell13-1', 'cell12-2', 'cell11-3', 'cell10-4', 'cell13-13', 'cell12-12', 'cell11-11', 'cell10-10'];\r\n  const TL = ['cell1-5', 'cell1-9', 'cell5-1', 'cell5-5', 'cell5-9', 'cell5-13', 'cell9-1', 'cell9-5', 'cell9-9', 'cell9-13', 'cell13-5', 'cell13-9'];\r\n  const DL = ['cell3-0', 'cell3-14', 'cell11-0', 'cell11-14', 'cell0-3', 'cell0-11', 'cell7-3', 'cell7-11', 'cell14-3', 'cell14-11', 'cell2-6', 'cell2-8', 'cell6-2', 'cell8-2', 'cell6-6', 'cell6-8', 'cell8-6', 'cell8-8', 'cell12-6', 'cell12-8', 'cell6-12', 'cell8-12', 'cell11-7', 'cell3-7'];\r\n  const refs = useRef([]);\r\n  const [direction,setDirection] = useState([0,1]) //direction[0] means moves down the row, direction[1] means column\r\n  const changeFocus = (row,col) => {\r\n    refs.current[row*15+col].focus()\r\n  }\r\n  const onKeyDown = (event,row,col) => {\r\n    if(event.keyCode === 40){\r\n      if (direction[1]) {\r\n        setDirection([1,0])\r\n      }\r\n      else if(row !== 14){\r\n        changeFocus(row+1,col)\r\n      }\r\n    }\r\n\r\n    else if(event.keyCode === 39){\r\n      if (direction[0]){\r\n        setDirection([0,1])\r\n      }\r\n      else if(col !== 14){\r\n        changeFocus(row,col+1)\r\n      }\r\n    }\r\n    else if(event.keyCode === 38){\r\n      if(row !== 0){\r\n        changeFocus(row-1,col)\r\n      }\r\n    }\r\n    else if(event.keyCode === 37){\r\n      if(col !== 0){\r\n        changeFocus(row,col-1)\r\n      }\r\n    }\r\n  }\r\n  const moveTile = (event,row,col) => {\r\n    let value = event.target.value;\r\n    value = value.replace(/[^A-Za-z]/gi, \"\")\r\n    if (value !== \"\" &&  direction[0]) {\r\n            changeFocus(row+1,col)\r\n        }\r\n    else if (value!== \"\" & direction[1]){\r\n      changeFocus(row,col+1)\r\n    }\r\n  }\r\n  const onKeyUp = (event,row,col) => {\r\n    if (event.keyCode === 8 & direction[0] && row !==0){\r\n        changeFocus(row-1,col)\r\n    }\r\n    else if(event.keyCode ===8 & direction[1] && col!==0){\r\n      changeFocus(row,col-1)\r\n    }\r\n}\r\n  let rows = [];\r\n    for (var i = 0; i < 15; i++){\r\n      let rowID = `row${i}`\r\n      let cell = []\r\n      for (var idx = 0; idx < 15; idx++){\r\n        let cellID = `cell${i}-${idx}`\r\n        let row = parseInt(`${i}`)\r\n        let col = parseInt(`${idx}`)\r\n        \r\n        cell.push(\r\n        <td key={cellID} \r\n            id={cellID}\r\n            className = {\r\n              direction[0] ?\r\n              \"moveRight\" :\r\n              \"moveDown\"}>\r\n          <div className={\r\n            board[row][col] && direction[0] ?\r\n            \"tile moveRight\" :\r\n            board[row][col] && direction[1] ?\r\n            \"tile moveDown\" :\r\n            direction[0] ?  \r\n            \"normalBox moveRight\" :\r\n            \"normalBox moveDown\"\r\n          }>\r\n            <input \r\n              ref = {(element) => {refs.current[row*15+col]=element}}\r\n              type=\"text\" \r\n              maxLength=\"1\" \r\n              value = {board[row][col]}\r\n              onKeyDown={(e) => onKeyDown(e,row,col)}\r\n              onChange = {(e) => {\r\n                handleBoardChange(e,parseInt(row),parseInt(col))\r\n                moveTile(e,row,col)}\r\n              }\r\n              onKeyUp = {(e) => onKeyUp(e,row,col)}\r\n              placeholder = {\r\n                TW.indexOf(cellID) !== -1 ?\r\n                \"TW\" :\r\n                DW.indexOf(cellID) !== -1 ?\r\n                \"DW\" :\r\n                TL.indexOf(cellID) !== -1 ?\r\n                \"TL\" :\r\n                DL.indexOf(cellID) !== -1 ?\r\n                \"DL\" :\r\n                \"\"\r\n              }\r\n            >\r\n            </input>\r\n          </div>\r\n        </td>)\r\n      }\r\n      rows.push(<tr key={i} id={rowID}>{cell}</tr>)\r\n    }\r\n\r\n  return (\r\n    <div className=\"board\">\r\n      <table>\r\n        {rows}\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Board","import React, {useRef} from 'react';\r\nimport '../App.css';\r\nconst Rack = ({rack,handleRackChange}) => {\r\n    const refs = useRef([]);\r\n    const changeFocus = (num) => {\r\n        refs.current[num].focus()\r\n    }\r\n    const onKeyDown = (event,num) => {\r\n        if(event.keyCode === 39 && num!==6){\r\n            changeFocus(num+1)\r\n        }\r\n        else if(event.keyCode===37 && num!==0){\r\n            changeFocus(num-1)\r\n        }}\r\n    const moveTile = (event,num) => {\r\n        let value = event.target.value;\r\n        value = value.replace(/[^A-Za-z _]/gi, \"\")\r\n        if (value !== \"\" && num !==6) {\r\n                changeFocus(num+1)\r\n            }\r\n        }\r\n    const onKeyUp = (event,num) => {\r\n        if (event.keyCode === 8 & num!==0 ){\r\n            changeFocus(num-1)\r\n        }\r\n    }\r\n    let rows = [];\r\n    for(var i = 0; i < 7; i++){\r\n        let tileID = `tile${i}`;\r\n        let tileNum = parseInt(`${i}`)\r\n        rows.push(\r\n            <div key={tileID} className={\r\n                rack[tileNum]?\r\n                \"tileRack\" :\r\n                \"normalRack\"}>\r\n                <input \r\n                    ref = {(element) => {\r\n                        refs.current[tileNum] = element}}\r\n                    id={tileID}\r\n                    type=\"text\" \r\n                    maxLength=\"1\" \r\n                    value = {rack[tileNum]}\r\n                    onChange = {(e) => {\r\n                        handleRackChange(e,tileNum)\r\n                        moveTile(e,tileNum)\r\n                    }}\r\n                    onKeyDown ={(e) =>{\r\n                        onKeyDown(e,tileNum)\r\n                    }}\r\n                    onKeyUp = {(e) => {\r\n                        onKeyUp(e,tileNum)\r\n                    }}\r\n                >\r\n                </input>\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n    <div className=\"rack\">\r\n        {rows}\r\n    </div>)\r\n}\r\nexport default Rack;","// Use react useEffect and useState isPending to create a loading\r\n// message while the algorithm is calculating for the best\r\n// move\r\nimport React from 'react'\r\nimport '../App.css';\r\n\r\nconst AnalysisSidebar = ({board,rack}) =>{\r\n    return (\r\n        <div className={\"AnalysisSidebar\"}>\r\n            <div className={\"sidebarhead\"}>\r\n            </div>\r\n            <div className={\"AnalysisResults\"}>\r\n            {board.map((row, i) => (\r\n          <div key={i}>\r\n            {row.map((col, j) => (\r\n              <span key={j}>{col}</span>\r\n            ))}\r\n          </div>\r\n        ))}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AnalysisSidebar","import '../App.css';\r\nimport Board from './Board'\r\nimport Rack from './Rack'\r\nimport { useState } from 'react'\r\nimport AnalysisSidebar from './AnalysisSidebar'\r\nfunction Analysis() {\r\n  const matrix = [];\r\n  for(let i = 0; i < 15; i++){\r\n    const row = [];\r\n    for(let j = 0; j< 15; j++){\r\n      row.push(\"\")\r\n    }\r\n    matrix.push(row)\r\n  }\r\n  const [board,setBoard] = useState(matrix);\r\n  const [rack, setRack] = useState([\"\",\"\",\"\",\"\",\"\",\"\",\"\"])\r\n\r\n  const handleBoardChange = (event,row,col) => {\r\n    let value = event.target.value;\r\n    value = value.replace(/[^A-Za-z]/gi, \"\") \r\n    let copy = [...board]\r\n    copy[row][col] = value\r\n    setBoard(copy)}\r\n  \r\n  const handleRackChange = (event,tileNum) => {\r\n    let value = event.target.value;\r\n    value = value.replace(/[^A-Za-z _]/gi, \"\") \r\n    let copy = [...rack]\r\n    copy[tileNum] = value\r\n    setRack(copy)}\r\n\r\n  return (\r\n    <div className=\"analysis-section\">\r\n      <Board \r\n        board={board}\r\n        handleBoardChange ={handleBoardChange}\r\n      />\r\n      <AnalysisSidebar \r\n        board={board}\r\n        rack={rack}/>\r\n      <Rack \r\n        rack={rack}\r\n        handleRackChange={handleRackChange}\r\n        />\r\n      \r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Analysis","import '../App.css';\r\nimport Header from '../components/Header'\r\nimport Analysis from '../components/Analysis'\r\n\r\nfunction AnalysisPage() {\r\n  return (\r\n    <div className=\"body\">\r\n      <Header />\r\n      <Analysis />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AnalysisPage\r\n\r\n\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\n\nimport HomePage from \"./container/HomePage\";\nimport AnalysisPage from \"./container/AnalysisPage\";\n\n const rootElement = document.getElementById(\"root\");\n ReactDOM.render(\n   <HashRouter>\n    <Switch>\n     <Route exact path=\"/\" component={HomePage} />\n     <Route path=\"/AnalysisPage\" component={AnalysisPage} />\n   </Switch>\n   </HashRouter>,\n   rootElement\n );\n"],"sourceRoot":""}